/* -*- C++ -*- */
/* Generated by /Users/thiennd/Desktop/study-documents/20192/20192-excercies/DistributedSystem/OpenDDS-3.14/bin/opendds_idl version 3.14 (ACE version 6.2a_p17) running on input file FaceMessage.idl */
#ifndef OPENDDS_IDL_GENERATED_FACEMESSAGEC_H_HKUEUE
#define OPENDDS_IDL_GENERATED_FACEMESSAGEC_H_HKUEUE
#include <tao/orbconf.h>
#include <tao/Basic_Types.h>
#include <ace/CDR_Stream.h>
#include <tao/VarOut_T.h>
#include "FACE/StringManager.h"
#include "FACE/types.hpp"
#include "dds/DCPS/PoolAllocationBase.h"
#include "FaceMessenger_Export.h"


/* Begin MODULE: CORBA */


/* End MODULE: CORBA */


/* Begin MODULE: Messenger */



/* Begin STRUCT: Message */

namespace Messenger {
struct Message;
typedef ::TAO_Var_Var_T<Message> Message_var;
typedef ::TAO_Out_T<Message> Message_out;

struct FaceMessenger_Export Message
{
  typedef Message_var _var_type;
  typedef Message_out _out_type;

  ::OpenDDS::FaceTypes::String_mgr text;
  ::FACE::Long subject_id;
  ::FACE::Long count;

  bool operator==(const Message& rhs) const;
  bool operator!=(const Message& rhs) const { return !(*this == rhs); }
  OPENDDS_POOL_ALLOCATION_HOOKS
};

FaceMessenger_Export void swap(Message& lhs, Message& rhs);

FaceMessenger_Export ACE_CDR::Boolean operator<< (ACE_OutputCDR& os, const Message& x);

FaceMessenger_Export ACE_CDR::Boolean operator>> (ACE_InputCDR& os, Message& x);

}

/* End STRUCT: Message */

/* End MODULE: Messenger */
#endif /* OPENDDS_IDL_GENERATED_FACEMESSAGEC_H_HKUEUE */
