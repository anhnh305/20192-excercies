% run initialization init% main algorithmFU = zeros(size(U,1),size(U,2),T/ht);FV = zeros(size(V,1),size(V,2),T/ht);FH = zeros(size(H,1),size(H,2),T/ht);% init FU FV FH at start timewhile t<T  % plot H   mesh(H);  title(['t = ' num2str(t)])  % spatial discretization     [dHx dHy] = get_differential_2D(H,hx,hy);  [dUx dUy] = get_differential_2D(U,hx,hy);  [dVx dVy] = get_differential_2D(V,hx,hy);  % time intergration    FU = f*V - U*dUx - V*dUy - g*dHx;  FV = -f*U - U*dVx - V*dVy - g*dHy;  FH = -U*dHx - H*dUx - V*dHy - H*dVy;  % update value   U = U + FU*ht;  V = V + FV*ht;  H = H + FH*ht;    % time step   t  t = t + ht;  pause(ht);endwhile